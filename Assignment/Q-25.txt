What is a List in Python?

A list in Python is a mutable, ordered collection of items that can store elements of different data types, such as integers, strings, or even other lists. Lists are defined using square brackets ([]), and their elements are separated by commas.

Mutable: 
    You can modify, add, or remove elements after the list is created.
Ordered: 
    The elements are stored in a specific sequence, and you can access them by their index.

How to Reverse a List in Python ?

There are several ways to reverse a list:

    Using the reverse() Method:

        This method reverses the list in place, meaning the original list is modified.

        my_list = [1, 2, 3, 4, 5]
        my_list.reverse()
        print(my_list)

        Output: [5, 4, 3, 2, 1]

    Using List Slicing:

        You can use slicing with a step of -1 to create a reversed copy of the list.

        my_list = [1, 2, 3, 4, 5]
        reversed_list = my_list[::-1]
        print(reversed_list)

        Output: [5, 4, 3, 2, 1]
        This method does not modify the original list; it creates a new reversed list.

    Using the reversed() Function:

        The reversed() function returns an iterator, so you need to convert it to a list using the list() function.

        my_list = [1, 2, 3, 4, 5]
        reversed_list = list(reversed(my_list))
        print(reversed_list)

        Output: [5, 4, 3, 2, 1]
        This also creates a new reversed list, leaving the original list unchanged.

Lists in Python are ordered, mutable collections of items.

You can reverse a list in place using reverse() or create a reversed copy using slicing ([::-1]) or the reversed() function.